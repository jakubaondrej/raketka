Cílem zadání je implementovat jednoduchou hru, variace na Asteroids.


Neberte předložené zdrojáky jako příklad jak psát hezký kód. Naopak to bylo napsáno tak aby byla třeba minimální znalost syntaxe, a kódu je pouze nezbytné minimum.
Zadání by měl byt schopen splnit i člověk, který nemá s C# žádné zkušenosti, ale má po ruce dokumentaci ohledně syntaxe (stačí internet a google).

Aplikace využívá WinForms, takže mimo MS Windows fungovat nebude, ale pro implementaci testového úkolu nic o windows nebo winforms vědět nemusíte.
Pro otevření dodaného projektu potřebujete MS Visual Studio, od verze 2012 nahoru, stačí Express/Community edice s instalací pro C# a desktop aplikace. 
Projekt potřebuje .Net framework verze alespoň 2.0 (v Properties projektu je prednastavené 3.5, nastavte dle toho jaké sdk mate nainstalované).
V případě nouze by mělo stačit založit nový WinForms projekt a do něj překopírovat dodané zdrojáky.


Pro veškerou aritmetiku použijte základní typy (int, float, double) a dodanou třídu (resp. strukturu) Vector a její operátory (můžete si do ni dopsat pomocné metody dle potřeby).
Tím se myslí, že je zakázáno používat hotové třídy jako je Point, Rectangle a podobné, z namespace System.Drawing a podobných. (Ale můžete si naimplementovat vlastní)
Třídu Math samozřejmě používat můžete, vzorové použiti je v příkladu a ve struktuře Vector.
Funkce pro zjištění času, pro implementaci hodin, je uvedena v příkladu.
Modifikujte prosím pouze soubory Game.cs, Vector.cs od komentare "/* Custom */" níže a případně vlastní přidané soubory.
Současný kód v metodě GameTick samozřejmě smažte, slouží jen jako příklad.


V tomto testu můžete pro jednoduchost celé řešení napsat jako vnitřní třídy v třidě CGame i když v praxi by toto nebylo vítané řešení.
Ale stejně tak to můžete udělat jako samostatné třídy, a do projektu přidat další zdrojové soubory. 
To jestli použijete vnitřní třídy a/nebo další soubory nemá na hodnocení až takový vliv, ale půjde spíš o celkový dojem z kódu. 
Při hodnocení bereme do úvahy co bylo napsáno v životopise, tedy např. pokud řešitel neumí C#, tak se k tomu přihlíží.


Cílem testu je zjistit jestli jste schopni samostatně implementovat nepříliš formální zadání.
Hodnotí se myšlenka (algoritmus) a celkový dojem provedení (že rozumíte problému, udržitelnost vývoje), konkrétní zápis a znalost pokročilých vlastností C# nemusí být předmětem tohoto testu (viz. životopis výše).
Pište tak, jak píšete "když vám do toho nikdo nekecá". Test byl navržet tak aby zabral co nejméně času a přitom šlo o ucelený a zábavný projekt, není cílem vás vytížit na mnoho hodin.
Pokud si netroufnete na celé zadání nebo se Vám nějaká část nezdaří, pokuste se zdůvodnit proč. 
Za samozřejmost se považuje že zadání řešíte sami, pokud Vám s tím pomahá kamarád(/ka), raději nám pošlete kontakt a životopis na něj.
Předpokladem je, že máte základní znalosti geometrie, pokud nevíte a neuspějete s hledáním na netu, zkuste napsat, pro dostatečně konkrétní dotazy se pokusíme poradit.


Zadání je poměrně volné, nejsou předepsány konkrétní rozměry, rychlosti atd. i vizuální reprezentaci herních entit si můžete libovolně rozšířit.
Tam kde zadání není konkrétní, tam se připouští více variant. Ale takových případech popište, jakou konkrétní varianty volíte – tedy doplňujete specifikace – a předpokládá se, že vaše řešení pak bude odpovídat této specifikaci.

V podadresáři "Vzorove reseni" je příklad jak může vypadat výsledek.


Základní zadání:
-----------------------------------------------------
Herni plocha obsahuje Raketu, Střely a Hodiny.

Raketa je vykreslena alespoň jako trojúhelník, a tak aby bylo poznat která strana je předek.
Pomoci kurzorových kláves doleva/doprava se otáčí raketou.
Pomoci kurzorových kláves nahoru/dolu se pohybuje raketou dopředu/dozadu.
Raketa může odletět za okraj obrazovky - pak se objeví na druhé straně.

Střela je vykreslena jako krátká úsečka.
Vystřel se ovládá mezerníkem - střela se vygeneruje před raketou s konstantní rychlosti.
Střela zaniká, pokud vyletí z obrazovky.
Střelou jde zasáhnout hodiny.

Hodiny jsou vykresleny jako čtverec uvnitř kterého jsou rafičky analogově ukazující čas (viz. vzorové rešení)
Hodiny se vygeneruji automaticky na náhodné pozici s náhodnou rychlostí pohybu.
Hodiny se odráží od okrajů obrazovky.
Pokud jsou Hodiny zasazeny Střelou (stačí např. podmínka, že začátek úsečky je uvnitř čtverce) rozpadnou se na dvoje menší (Hodinky). Odpadlé Hodinky se začnou pohybovat původní rychlostí kolmo na původní směr. 
K rozpadu dochází pouze na další dvě menší úrovně, třetí úroveň velikosti už po zásahu zmizí.
Hra generuje nové Hodiny tak aby na scéně byly vždy nejméně troje (bez ohledu na velikost).



Rozšířené zadání: (Inspirace k vlastní iniciativě nad rámec minimálního rozsahu)
-----------------------------------------------------
Hodiny se odráží od krajů obrazovky hranou (ne středem)
Raketa má setrvačnost (brzdí a zrychluje postupně)
Pokud raketa zasahuje za okraj obrazovky, je zároveň již vidět i na opačné straně
Lze korektně vystřelit, i pokud raketa míří za okraj obrazovky (tak ze vrchol/hlaveň je již vidět na druhé straně)
Při rozstřelení Hodin závisí rychlost odpadlých hodinek i na směru a rychlosti příletu střely



Po přečtení zadání prosím odhadněte čas jaký vám zabere implementace (v hodinách) a toto nám napište.
Řešení poté očekáváme zhruba do týdne (pokud nebylo dohodnuto jinak) a s řešením prosím pošlete i skutečný čas jaký vám implemetace zabrala (opět v hodinách).
Řešení prosím pošlete jako prijmeni_jmeno.zip

Přeji úspěšné řešení.

